@startuml
!include style.puml
skinparam ArrowFontStyle plain

Actor User as user USER_COLOR
box Logic LOGIC_COLOR_T1
Participant ":UI" as ui UI_COLOR
Participant ":Logic" as logic LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
Participant ":Model" as model MODEL_COLOR
Participant ":Attribute" as attribute ATTRIBUTE_COLOR
end box

box Storage STORAGE_COLOR_T1
Participant ":Storage" as storage STORAGE_COLOR
end box

user -[USER_COLOR]> ui : "editAttribute /uuid 1234 /name newValue"
activate ui UI_COLOR

ui -[UI_COLOR]> logic : execute("editAttribute /uuid 1234 /name newValue")
activate logic LOGIC_COLOR

logic -[LOGIC_COLOR]> model : findPerson(uuid)
activate model MODEL_COLOR

model --[MODEL_COLOR]> logic : return person object
deactivate model

logic -[LOGIC_COLOR]> model : person.hasAttribute(name)
activate model MODEL_COLOR

model --[MODEL_COLOR]> logic : return true if exists
deactivate model

logic -[LOGIC_COLOR]> attribute : CreateAttribute(name, newValue)
activate attribute ATTRIBUTE_COLOR

attribute --[ATTRIBUTE_COLOR]> logic : return edited attribute
deactivate attribute
attribute --[HIDDEN]> attribute : model
destroy attribute

logic -[LOGIC_COLOR]> model : person.updateAttribute(editedAttribute)
activate model MODEL_COLOR

model --[MODEL_COLOR]> logic : person updated
deactivate model

logic -[LOGIC_COLOR]> storage : saveAddressBook(addressBook)
activate storage STORAGE_COLOR

storage -[STORAGE_COLOR]> storage : Save to file
activate storage STORAGE_COLOR_T1
storage --[STORAGE_COLOR]> storage : file saved
deactivate storage STORAGE_COLOR_T1

storage --[STORAGE_COLOR]> logic : save complete
deactivate storage
storage --[HIDDEN]> storage : model
destroy storage

logic --[LOGIC_COLOR]> ui : CommandResult("Attribute edited successfully.")
deactivate logic

ui--[UI_COLOR]> user : display "Attribute edited successfully."
deactivate ui
@enduml
